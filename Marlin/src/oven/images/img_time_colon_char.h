
/*******************************************************************************
* image
* filename: unsaved
* name: img_time_colon_char
*
* preset name: Color A8R8G8B8
* data block size: 8 bit(s), uint8_t
* RLE compression enabled: no
* conversion type: Color, not_used not_used
* bits per pixel: 32
*
* preprocess:
*  main scan direction: top_to_bottom
*  line scan direction: forward
*  inverse: no
*******************************************************************************/

/*
 typedef struct {
     const uint8_t *data;
     uint16_t width;
     uint16_t height;
     uint8_t dataSize;
     } tImage;
*/
#include <stdint.h>



static const uint8_t image_data_img_time_colon_char[504] = {
    0xff, 0x1d, 0x18, 0x19, 0xff, 0x0b, 0x10, 0x1b, 0xff, 0x19, 0x17, 0x19, 0xff, 0x48, 0x2c, 0x14, 0xff, 0x0e, 0x11, 0x1a, 0xff, 0x12, 0x13, 0x1a, 0xff, 0x1e, 0x19, 0x19, 
    0xff, 0x07, 0x0e, 0x1b, 0xff, 0xaa, 0x5b, 0x09, 0xff, 0xff, 0x94, 0x00, 0xff, 0xff, 0x8e, 0x00, 0xff, 0xff, 0x8f, 0x00, 0xff, 0x61, 0x38, 0x11, 0xff, 0x11, 0x12, 0x1a, 
    0xff, 0x71, 0x40, 0x0f, 0xff, 0xff, 0x90, 0x00, 0xff, 0xff, 0x83, 0x00, 0xff, 0xff, 0x83, 0x01, 0xff, 0xff, 0x84, 0x00, 0xff, 0xff, 0x92, 0x00, 0xff, 0x1e, 0x18, 0x18, 
    0xff, 0xbf, 0x65, 0x07, 0xff, 0xff, 0x87, 0x00, 0xff, 0xff, 0x83, 0x01, 0xff, 0xff, 0x83, 0x01, 0xff, 0xff, 0x83, 0x01, 0xff, 0xff, 0x8d, 0x00, 0xff, 0x49, 0x2c, 0x13, 
    0xff, 0x80, 0x47, 0x0e, 0xff, 0xff, 0x8e, 0x00, 0xff, 0xff, 0x83, 0x01, 0xff, 0xff, 0x83, 0x01, 0xff, 0xff, 0x83, 0x00, 0xff, 0xff, 0x93, 0x00, 0xff, 0x21, 0x1a, 0x18, 
    0xff, 0x05, 0x0d, 0x1b, 0xff, 0xc8, 0x69, 0x06, 0xff, 0xff, 0x92, 0x00, 0xff, 0xff, 0x8d, 0x00, 0xff, 0xff, 0x91, 0x00, 0xff, 0x6c, 0x3d, 0x10, 0xff, 0x0f, 0x12, 0x1a, 
    0xff, 0x1d, 0x18, 0x19, 0xff, 0x07, 0x0e, 0x1b, 0xff, 0x2f, 0x21, 0x17, 0xff, 0x57, 0x34, 0x12, 0xff, 0x15, 0x15, 0x19, 0xff, 0x10, 0x12, 0x1a, 0xff, 0x1e, 0x19, 0x19, 
    0xff, 0x1e, 0x19, 0x19, 0xff, 0x1d, 0x18, 0x19, 0xff, 0x19, 0x16, 0x19, 0xff, 0x16, 0x15, 0x19, 0xff, 0x1b, 0x17, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 
    0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 
    0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 
    0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 
    0xff, 0x1e, 0x19, 0x19, 0xff, 0x19, 0x17, 0x19, 0xff, 0x0d, 0x11, 0x1a, 0xff, 0x09, 0x0f, 0x1b, 0xff, 0x10, 0x12, 0x1a, 0xff, 0x1c, 0x18, 0x19, 0xff, 0x1e, 0x19, 0x19, 
    0xff, 0x15, 0x15, 0x19, 0xff, 0x24, 0x1c, 0x18, 0xff, 0xb2, 0x5e, 0x09, 0xff, 0xd4, 0x6e, 0x05, 0xff, 0x93, 0x50, 0x0c, 0xff, 0x0b, 0x10, 0x1a, 0xff, 0x1c, 0x18, 0x19, 
    0xff, 0x25, 0x1c, 0x18, 0xff, 0xff, 0x8e, 0x00, 0xff, 0xff, 0x89, 0x00, 0xff, 0xff, 0x86, 0x00, 0xff, 0xff, 0x8c, 0x00, 0xff, 0xe5, 0x76, 0x03, 0xff, 0x04, 0x0c, 0x1b, 
    0xff, 0xa4, 0x58, 0x0a, 0xff, 0xff, 0x89, 0x00, 0xff, 0xff, 0x83, 0x01, 0xff, 0xff, 0x83, 0x01, 0xff, 0xff, 0x83, 0x01, 0xff, 0xff, 0x90, 0x00, 0xff, 0x41, 0x29, 0x14, 
    0xff, 0xaf, 0x5d, 0x08, 0xff, 0xff, 0x89, 0x00, 0xff, 0xff, 0x83, 0x01, 0xff, 0xff, 0x83, 0x01, 0xff, 0xff, 0x83, 0x01, 0xff, 0xff, 0x8f, 0x00, 0xff, 0x44, 0x2a, 0x14, 
    0xff, 0x34, 0x23, 0x16, 0xff, 0xff, 0x91, 0x00, 0xff, 0xff, 0x88, 0x00, 0xff, 0xff, 0x85, 0x00, 0xff, 0xff, 0x8b, 0x00, 0xff, 0xf4, 0x7d, 0x02, 0xff, 0x05, 0x0d, 0x1b, 
    0xff, 0x12, 0x13, 0x1a, 0xff, 0x34, 0x23, 0x16, 0xff, 0xc4, 0x67, 0x07, 0xff, 0xe7, 0x77, 0x03, 0xff, 0xa2, 0x57, 0x0a, 0xff, 0x0e, 0x11, 0x1a, 0xff, 0x1b, 0x17, 0x19
};
const tImage img_time_colon_char = { image_data_img_time_colon_char, 7, 18,
    8 };

