
/*******************************************************************************
* image
* filename: unsaved
* name: rect_internal_round
*
* preset name: Color A8R8G8B8
* data block size: 8 bit(s), uint8_t
* RLE compression enabled: no
* conversion type: Color, not_used not_used
* bits per pixel: 32
*
* preprocess:
*  main scan direction: top_to_bottom
*  line scan direction: forward
*  inverse: no
*******************************************************************************/

/*
 typedef struct {
     const uint8_t *data;
     uint16_t width;
     uint16_t height;
     uint8_t dataSize;
     } tImage;
*/
#include <stdint.h>



static const uint8_t image_data_rect_internal_round[400] = {
    0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x0f, 0x12, 0x1a, 0xff, 0x8e, 0x4d, 0x0c, 0xff, 0xff, 0x8e, 0x00, 0xff, 0xb9, 0x61, 0x08, 
    0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x00, 0x0a, 0x1c, 0xff, 0xec, 0x7a, 0x03, 0xff, 0xff, 0x8d, 0x00, 0xff, 0x7b, 0x44, 0x0f, 
    0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x15, 0x15, 0x19, 0xff, 0x43, 0x2a, 0x14, 0xff, 0xff, 0x8f, 0x00, 0xff, 0xff, 0x90, 0x00, 0xff, 0x21, 0x1a, 0x18, 
    0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1d, 0x18, 0x19, 0xff, 0x00, 0x0a, 0x1c, 0xff, 0xf2, 0x7c, 0x02, 0xff, 0xff, 0x8a, 0x00, 0xff, 0xbf, 0x64, 0x08, 0xff, 0x08, 0x0e, 0x1b, 
    0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1c, 0x18, 0x19, 0xff, 0x00, 0x08, 0x1c, 0xff, 0xb3, 0x5f, 0x09, 0xff, 0xff, 0x8b, 0x00, 0xff, 0xff, 0x8f, 0x00, 0xff, 0x1b, 0x18, 0x18, 0xff, 0x1a, 0x17, 0x19, 
    0xff, 0x1e, 0x19, 0x19, 0xff, 0x1c, 0x18, 0x19, 0xff, 0x11, 0x13, 0x1a, 0xff, 0x04, 0x0d, 0x1b, 0xff, 0xc2, 0x66, 0x07, 0xff, 0xff, 0x8c, 0x00, 0xff, 0xff, 0x92, 0x00, 0xff, 0x62, 0x39, 0x11, 0xff, 0x10, 0x12, 0x1a, 0xff, 0x1e, 0x19, 0x19, 
    0xff, 0x07, 0x0e, 0x1b, 0xff, 0x0a, 0x0f, 0x1b, 0xff, 0x6c, 0x3e, 0x10, 0xff, 0xff, 0x84, 0x00, 0xff, 0xff, 0x8a, 0x00, 0xff, 0xff, 0x91, 0x00, 0xff, 0x7a, 0x44, 0x0f, 0xff, 0x07, 0x0e, 0x1b, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 
    0xff, 0xd3, 0x6e, 0x05, 0xff, 0xff, 0x8c, 0x00, 0xff, 0xff, 0x8c, 0x00, 0xff, 0xff, 0x8c, 0x00, 0xff, 0xff, 0x8a, 0x00, 0xff, 0x4a, 0x2d, 0x14, 0xff, 0x09, 0x0f, 0x1b, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 
    0xff, 0xff, 0x8e, 0x00, 0xff, 0xff, 0x8f, 0x00, 0xff, 0xff, 0x86, 0x00, 0xff, 0x91, 0x4f, 0x0c, 0xff, 0x0c, 0x10, 0x1a, 0xff, 0x13, 0x14, 0x1a, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 
    0xff, 0x78, 0x43, 0x0f, 0xff, 0x44, 0x2b, 0x15, 0xff, 0x04, 0x0c, 0x1b, 0xff, 0x0f, 0x12, 0x1a, 0xff, 0x1c, 0x18, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19, 0xff, 0x1e, 0x19, 0x19
};
const tImage rect_internal_round = { image_data_rect_internal_round, 10, 10,
    8 };

